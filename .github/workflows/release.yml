name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="0.0.0-dev"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Resonance v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false

  build-release:
    name: Build Release - ${{ matrix.platform.name }}
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux
            runner: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            archive-name: resonance-linux-x64.tar.gz
          - name: Windows
            runner: windows-latest
            rust-target: x86_64-pc-windows-msvc
            archive-name: resonance-windows-x64.zip
          - name: macOS
            runner: macos-latest
            rust-target: x86_64-apple-darwin
            archive-name: resonance-macos-x64.tar.gz
          - name: macOS-arm
            runner: macos-latest
            rust-target: aarch64-apple-darwin
            archive-name: resonance-macos-arm64.tar.gz

    runs-on: ${{ matrix.platform.runner }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust-target }}

      - name: Install Linux dependencies
        if: matrix.platform.name == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install npm dependencies
        run: npm ci

      - name: Update version in package.json
        run: |
          npm version ${{ needs.create-release.outputs.version }} --no-git-tag-version

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v${{ needs.create-release.outputs.version }}
          releaseName: Resonance v${{ needs.create-release.outputs.version }}
          releaseBody: See the release notes for details.
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.platform.rust-target }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./src-tauri/target/${{ matrix.platform.rust-target }}/release/bundle/
          asset_name: ${{ matrix.platform.archive-name }}
          asset_content_type: application/octet-stream
